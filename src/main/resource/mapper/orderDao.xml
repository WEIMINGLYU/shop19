<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.dao.IOrderDao">
<!--创建订单-->
    <insert id="newOrder" parameterType="order">
          <selectKey keyProperty="oid" resultType="int" order="AFTER">
              select LAST_INSERT_ID();
          </selectKey>
        insert into orders(total,ordertime,state,name,phone,addr,uid)
          values (#{total},#{ordertime},#{state},#{name},#{phone},#{addr},#{uid})
    </insert>
    <!--创建订单项-->
    <insert id="newOrderitem" parameterType="Orderitem">
         insert into orderitem(count,subtotal,pid,oid) values (#{count},#{subtotal},#{pid},#{oid})
    </insert>
    <resultMap id="orderByOid" type="OrderExt">
    <id  property="oid" column="oid" ></id>
        <result property="total" column="total" ></result>
        <result property="ordertime" column="ordertime" ></result>
        <result property="state" column="state" ></result>
        <result property="name" column="name" ></result>
        <result property="phone" column="phone" ></result>
        <result property="addr" column="addr" ></result>
      <collection property="orderitemExtList" ofType="orderitemExt">
              <id  property="itemid" column="itemid" ></id>
              <result property="count" column="count" ></result>
              <result property="subtotal" column="subtotal" ></result>
              <result property="pid" column="pid" ></result>
              <result property="oid" column="oid" ></result>
          <association property="product" javaType="product">
              <id column="pid" property="pid"></id>
              <result property="pname" column="pname"></result>
              <result property="market_price" column="market_price"></result>
              <result property="shop_price" column="shop_price"></result>
              <result property="image" column="image"></result>
              <result property="pdesc" column="pdesc"></result>
              <result property="is_hot" column="is_hot"></result>
              <result property="pdate" column="pdate"></result>
              <result property="csid" column="csid"></result>
          </association>
        </collection>
    </resultMap>
    <!--根据商品ID查询订单详情-->
    <select id="findOrderByOid" parameterType="int" resultMap="orderByOid">
        select orders.*,orderitem.*,product.*
        from orders
        inner join  orderitem
        on orders.oid = orderitem.oid
        inner join product
        on orderitem.pid = product.pid
        where orders.oid = #{oid}
    </select>
    <!--修改订单状态-->
    <update id="changeState" parameterType="OrderExt">
        update orders set state = #{state} where oid = #{oid}
    </update>
    <!--查询某个用户下的订单个数-->
     <select id="findOrdersCount" parameterType="com.ai.util.PageBeanForOrder" resultType="int">
         select count(*)
         from orders
         <where>
             <if test="uid != null">
                 and  orders.uid = #{uid}
             </if>
             <if test="state != null">
                 and state = #{state}
             </if>
         </where>
     </select>
    <!--查询某个用户下的订单列表-->
    <select id="findOrdersByUid" parameterType="com.ai.util.PageBeanForOrder" resultMap="orderByOid">
       select *
       from (select * from orders

        <where>
            and orders.uid = #{uid}
            <if test="state != null">
                and state = #{state}
            </if>
        </where>
       order by ordertime desc
       limit #{startLimit},#{pageSize}) a left  join orderitem
       on a.oid = orderitem.oid
       left  join  product
       on orderitem.pid = product.pid


    </select>
    <!--查询我的订单中所有订单状态-->
    <select id="findMyOrdersByState" parameterType="com.ai.util.PageBeanForOrder" resultType="Integer">
        select count(*) from orders
       where orders.uid = #{uid} and state = #{state}


    </select>
</mapper>